/*
 * Sudoku Game
 * Russell made this!!
 */

package russell.sudoku.gui;

import drkninja.sudoku.gui.SudokuGUI;
import drkninja.sudoku.main.SudoMain;
import javax.swing.JOptionPane;
import russell.sudoku.util.Reference;

/**
 *
 * @author Russell
 */
public class SetDifficulty extends javax.swing.JFrame {

	/**
	 * Creates new form SetDifficulty
	 */
	public SetDifficulty() {
		initComponents();
                setVisible(true);
                MediumRadio.setSelected(true);
                RockButton.requestFocus();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DifficultyGroup = new javax.swing.ButtonGroup();
        InfoText = new javax.swing.JLabel();
        EasyRadio = new javax.swing.JRadioButton();
        MediumRadio = new javax.swing.JRadioButton();
        HardRadio = new javax.swing.JRadioButton();
        FreeRadio = new javax.swing.JRadioButton();
        RockButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("SetDifficulty"); // NOI18N
        setResizable(false);

        InfoText.setText("Choose Difficulty Setting:");

        DifficultyGroup.add(EasyRadio);
        EasyRadio.setText("Easy");

        DifficultyGroup.add(MediumRadio);
        MediumRadio.setText("Medium");

        DifficultyGroup.add(HardRadio);
        HardRadio.setText("Hard");

        DifficultyGroup.add(FreeRadio);
        FreeRadio.setText("Freestyle");

        RockButton.setText("Let's Rock");
        RockButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RockButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(InfoText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(RockButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(EasyRadio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MediumRadio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(HardRadio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(FreeRadio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(InfoText)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EasyRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MediumRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(HardRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FreeRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RockButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void RockButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RockButtonActionPerformed
        // TODO add your handling code here:
		if (EasyRadio.isSelected()) {
			Reference.Difficulty = Reference.EASY_D;
		} else if (MediumRadio.isSelected()) {
			Reference.Difficulty = Reference.MEDIUM_D;
		} else if (HardRadio.isSelected()) {
			Reference.Difficulty = Reference.HARD_D;
		} else if (FreeRadio.isSelected()) {
			Reference.Difficulty = 0;
		} else {
			JOptionPane.showMessageDialog(null, "Select a difficulty.", "Error!", JOptionPane.ERROR_MESSAGE);
			return;
		}
		dispose();
		SudoMain.MainGUI = new SudokuGUI();
    }//GEN-LAST:event_RockButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup DifficultyGroup;
    private javax.swing.JRadioButton EasyRadio;
    private javax.swing.JRadioButton FreeRadio;
    private javax.swing.JRadioButton HardRadio;
    private javax.swing.JLabel InfoText;
    private javax.swing.JRadioButton MediumRadio;
    private javax.swing.JButton RockButton;
    // End of variables declaration//GEN-END:variables
}
